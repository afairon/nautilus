// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AccountType int32

const (
	ADMIN  AccountType = 0
	AGENCY AccountType = 1
	DIVER  AccountType = 2
)

var AccountType_name = map[int32]string{
	0: "ADMIN",
	1: "AGENCY",
	2: "DIVER",
}

var AccountType_value = map[string]int32{
	"ADMIN":  0,
	"AGENCY": 1,
	"DIVER":  2,
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

type Level int32

const (
	INSTRUCTOR Level = 0
	MASTER     Level = 1
	RESCUE     Level = 2
	ADVANCED   Level = 3
	OPEN       Level = 4
)

var Level_name = map[int32]string{
	0: "INSTRUCTOR",
	1: "MASTER",
	2: "RESCUE",
	3: "ADVANCED",
	4: "OPEN",
}

var Level_value = map[string]int32{
	"INSTRUCTOR": 0,
	"MASTER":     1,
	"RESCUE":     2,
	"ADVANCED":   3,
	"OPEN":       4,
}

func (Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func init() {
	proto.RegisterEnum("common.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("common.Level", Level_name, Level_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xb4, 0xf4, 0xb9, 0xb8,
	0x1d, 0x93, 0x93, 0xf3, 0x4b, 0xf3, 0x4a, 0x42, 0x2a, 0x0b, 0x52, 0x85, 0x38, 0xb9, 0x58, 0x1d,
	0x5d, 0x7c, 0x3d, 0xfd, 0x04, 0x18, 0x84, 0xb8, 0xb8, 0xd8, 0x1c, 0xdd, 0x5d, 0xfd, 0x9c, 0x23,
	0x05, 0x18, 0x41, 0xc2, 0x2e, 0x9e, 0x61, 0xae, 0x41, 0x02, 0x4c, 0x5a, 0xee, 0x5c, 0xac, 0x3e,
	0xa9, 0x65, 0xa9, 0x39, 0x42, 0x7c, 0x5c, 0x5c, 0x9e, 0x7e, 0xc1, 0x21, 0x41, 0xa1, 0xce, 0x21,
	0xfe, 0x41, 0x10, 0xf5, 0xbe, 0x8e, 0xc1, 0x21, 0xae, 0x41, 0x02, 0x8c, 0x20, 0x76, 0x90, 0x6b,
	0xb0, 0x73, 0xa8, 0xab, 0x00, 0x93, 0x10, 0x0f, 0x17, 0x87, 0xa3, 0x4b, 0x98, 0xa3, 0x9f, 0xb3,
	0xab, 0x8b, 0x00, 0xb3, 0x10, 0x07, 0x17, 0x8b, 0x7f, 0x80, 0xab, 0x9f, 0x00, 0x8b, 0x93, 0xd5,
	0x85, 0x87, 0x72, 0x0c, 0x37, 0x1e, 0xca, 0x31, 0x7c, 0x78, 0x28, 0xc7, 0xd8, 0xf0, 0x48, 0x8e,
	0x71, 0xc5, 0x23, 0x39, 0xc6, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48,
	0x8e, 0xf1, 0xc5, 0x23, 0x39, 0x86, 0x0f, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0,
	0x58, 0x8e, 0xe1, 0xc6, 0x63, 0x39, 0x86, 0x28, 0x16, 0x3d, 0xfd, 0x82, 0xa4, 0x24, 0x36, 0xb0,
	0x27, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x63, 0x72, 0xa0, 0x80, 0xd4, 0x00, 0x00, 0x00,
}

func (x AccountType) String() string {
	s, ok := AccountType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x Level) String() string {
	s, ok := Level_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
