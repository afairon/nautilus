// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: model.proto

package pb

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Account type
type AccountType int32

const (
	ADMIN  AccountType = 0
	AGENCY AccountType = 1
	DIVER  AccountType = 2
)

var AccountType_name = map[int32]string{
	0: "ADMIN",
	1: "AGENCY",
	2: "DIVER",
}

var AccountType_value = map[string]int32{
	"ADMIN":  0,
	"AGENCY": 1,
	"DIVER":  2,
}

func (AccountType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{0}
}

// Gender
type GenderType int32

const (
	FEMALE GenderType = 0
	MALE   GenderType = 1
)

var GenderType_name = map[int32]string{
	0: "FEMALE",
	1: "MALE",
}

var GenderType_value = map[string]int32{
	"FEMALE": 0,
	"MALE":   1,
}

func (GenderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{1}
}

// Level
type LevelType int32

const (
	INSTRUCTOR          LevelType = 0
	MASTER              LevelType = 1
	RESCUE              LevelType = 2
	ADVANCED_OPEN_WATER LevelType = 3
	OPEN_WATER          LevelType = 4
)

var LevelType_name = map[int32]string{
	0: "INSTRUCTOR",
	1: "MASTER",
	2: "RESCUE",
	3: "ADVANCED_OPEN_WATER",
	4: "OPEN_WATER",
}

var LevelType_value = map[string]int32{
	"INSTRUCTOR":          0,
	"MASTER":              1,
	"RESCUE":              2,
	"ADVANCED_OPEN_WATER": 3,
	"OPEN_WATER":          4,
}

func (LevelType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{2}
}

// Trip type
type TripType int32

const (
	ONSHORE  TripType = 0
	OFFSHORE TripType = 1
)

var TripType_name = map[int32]string{
	0: "ONSHORE",
	1: "OFFSHORE",
}

var TripType_value = map[string]int32{
	"ONSHORE":  0,
	"OFFSHORE": 1,
}

func (TripType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{3}
}

// File
type File struct {
	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Link     string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	File     []byte `protobuf:"bytes,10,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *File) Reset()      { *m = File{} }
func (*File) ProtoMessage() {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{0}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_File.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return m.Size()
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *File) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *File) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

// User account
type Account struct {
	Id        uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string      `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	Email     string      `protobuf:"bytes,20,opt,name=email,proto3" json:"email,omitempty"`
	Password  string      `protobuf:"bytes,30,opt,name=password,proto3" json:"password,omitempty"`
	Type      AccountType `protobuf:"varint,40,opt,name=type,proto3,enum=model.AccountType" json:"type,omitempty"`
	Verified  bool        `protobuf:"varint,50,opt,name=verified,proto3" json:"verified,omitempty"`
	Active    bool        `protobuf:"varint,60,opt,name=active,proto3" json:"active,omitempty"`
	CreatedOn *time.Time  `protobuf:"bytes,70,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn *time.Time  `protobuf:"bytes,80,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *Account) Reset()      { *m = Account{} }
func (*Account) ProtoMessage() {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{1}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Account.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return m.Size()
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return ADMIN
}

func (m *Account) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *Account) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Account) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *Account) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

// Admin
type Admin struct {
	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *Admin) Reset()      { *m = Admin{} }
func (*Admin) ProtoMessage() {}
func (*Admin) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{2}
}
func (m *Admin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Admin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Admin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Admin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Admin.Merge(m, src)
}
func (m *Admin) XXX_Size() int {
	return m.Size()
}
func (m *Admin) XXX_DiscardUnknown() {
	xxx_messageInfo_Admin.DiscardUnknown(m)
}

var xxx_messageInfo_Admin proto.InternalMessageInfo

func (m *Admin) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

// Address
type Address struct {
	Id            uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AddressLine_1 string     `protobuf:"bytes,10,opt,name=address_line_1,json=addressLine1,proto3" json:"address_line_1,omitempty"`
	AddressLine_2 string     `protobuf:"bytes,20,opt,name=address_line_2,json=addressLine2,proto3" json:"address_line_2,omitempty"`
	City          string     `protobuf:"bytes,30,opt,name=city,proto3" json:"city,omitempty"`
	Postcode      string     `protobuf:"bytes,40,opt,name=postcode,proto3" json:"postcode,omitempty"`
	Region        string     `protobuf:"bytes,50,opt,name=region,proto3" json:"region,omitempty"`
	Country       string     `protobuf:"bytes,60,opt,name=country,proto3" json:"country,omitempty"`
	CreatedOn     *time.Time `protobuf:"bytes,70,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn     *time.Time `protobuf:"bytes,80,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *Address) Reset()      { *m = Address{} }
func (*Address) ProtoMessage() {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{3}
}
func (m *Address) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Address.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return m.Size()
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Address) GetAddressLine_1() string {
	if m != nil {
		return m.AddressLine_1
	}
	return ""
}

func (m *Address) GetAddressLine_2() string {
	if m != nil {
		return m.AddressLine_2
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *Address) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *Address) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

// Agency
type Agency struct {
	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string     `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Phone     string     `protobuf:"bytes,20,opt,name=phone,proto3" json:"phone,omitempty"`
	Account   *Account   `protobuf:"bytes,30,opt,name=account,proto3" json:"account,omitempty"`
	Address   Address    `protobuf:"bytes,40,opt,name=address,proto3" json:"address"`
	Documents []File     `protobuf:"bytes,50,rep,name=documents,proto3" json:"documents"`
	CreatedOn *time.Time `protobuf:"bytes,60,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn *time.Time `protobuf:"bytes,70,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *Agency) Reset()      { *m = Agency{} }
func (*Agency) ProtoMessage() {}
func (*Agency) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{4}
}
func (m *Agency) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Agency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Agency.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Agency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agency.Merge(m, src)
}
func (m *Agency) XXX_Size() int {
	return m.Size()
}
func (m *Agency) XXX_DiscardUnknown() {
	xxx_messageInfo_Agency.DiscardUnknown(m)
}

var xxx_messageInfo_Agency proto.InternalMessageInfo

func (m *Agency) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Agency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Agency) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Agency) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Agency) GetAddress() Address {
	if m != nil {
		return m.Address
	}
	return Address{}
}

func (m *Agency) GetDocuments() []File {
	if m != nil {
		return m.Documents
	}
	return nil
}

func (m *Agency) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *Agency) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

// Diver
type Diver struct {
	Id        uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string     `protobuf:"bytes,10,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string     `protobuf:"bytes,20,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone     string     `protobuf:"bytes,30,opt,name=phone,proto3" json:"phone,omitempty"`
	BirthDate time.Time  `protobuf:"bytes,40,opt,name=birth_date,json=birthDate,proto3,stdtime" json:"birth_date"`
	Level     LevelType  `protobuf:"varint,50,opt,name=level,proto3,enum=model.LevelType" json:"level,omitempty"`
	Account   *Account   `protobuf:"bytes,60,opt,name=account,proto3" json:"account,omitempty"`
	Documents []File     `protobuf:"bytes,70,rep,name=documents,proto3" json:"documents"`
	CreatedOn *time.Time `protobuf:"bytes,80,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn *time.Time `protobuf:"bytes,90,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *Diver) Reset()      { *m = Diver{} }
func (*Diver) ProtoMessage() {}
func (*Diver) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{5}
}
func (m *Diver) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Diver) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Diver.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Diver) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Diver.Merge(m, src)
}
func (m *Diver) XXX_Size() int {
	return m.Size()
}
func (m *Diver) XXX_DiscardUnknown() {
	xxx_messageInfo_Diver.DiscardUnknown(m)
}

var xxx_messageInfo_Diver proto.InternalMessageInfo

func (m *Diver) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Diver) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Diver) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Diver) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Diver) GetBirthDate() time.Time {
	if m != nil {
		return m.BirthDate
	}
	return time.Time{}
}

func (m *Diver) GetLevel() LevelType {
	if m != nil {
		return m.Level
	}
	return INSTRUCTOR
}

func (m *Diver) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *Diver) GetDocuments() []File {
	if m != nil {
		return m.Documents
	}
	return nil
}

func (m *Diver) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *Diver) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

// TripComment
type TripComment struct {
	Id            uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment       string     `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	Stars         uint32     `protobuf:"varint,20,opt,name=stars,proto3" json:"stars,omitempty"`
	ReservationId uint64     `protobuf:"varint,30,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	CreatedOn     *time.Time `protobuf:"bytes,40,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn     *time.Time `protobuf:"bytes,50,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *TripComment) Reset()      { *m = TripComment{} }
func (*TripComment) ProtoMessage() {}
func (*TripComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{6}
}
func (m *TripComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TripComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TripComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TripComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TripComment.Merge(m, src)
}
func (m *TripComment) XXX_Size() int {
	return m.Size()
}
func (m *TripComment) XXX_DiscardUnknown() {
	xxx_messageInfo_TripComment.DiscardUnknown(m)
}

var xxx_messageInfo_TripComment proto.InternalMessageInfo

func (m *TripComment) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TripComment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *TripComment) GetStars() uint32 {
	if m != nil {
		return m.Stars
	}
	return 0
}

func (m *TripComment) GetReservationId() uint64 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (m *TripComment) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *TripComment) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

// HotelComment
type HotelComment struct {
	Id            uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment       string     `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	Stars         uint32     `protobuf:"varint,20,opt,name=stars,proto3" json:"stars,omitempty"`
	ReservationId uint64     `protobuf:"varint,30,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	CreatedOn     *time.Time `protobuf:"bytes,40,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn     *time.Time `protobuf:"bytes,50,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *HotelComment) Reset()      { *m = HotelComment{} }
func (*HotelComment) ProtoMessage() {}
func (*HotelComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{7}
}
func (m *HotelComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HotelComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HotelComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HotelComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HotelComment.Merge(m, src)
}
func (m *HotelComment) XXX_Size() int {
	return m.Size()
}
func (m *HotelComment) XXX_DiscardUnknown() {
	xxx_messageInfo_HotelComment.DiscardUnknown(m)
}

var xxx_messageInfo_HotelComment proto.InternalMessageInfo

func (m *HotelComment) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HotelComment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *HotelComment) GetStars() uint32 {
	if m != nil {
		return m.Stars
	}
	return 0
}

func (m *HotelComment) GetReservationId() uint64 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (m *HotelComment) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *HotelComment) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

// LiveaboardComment
type LiveaboardComment struct {
	Id            uint64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment       string     `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	Stars         uint32     `protobuf:"varint,20,opt,name=stars,proto3" json:"stars,omitempty"`
	ReservationId uint64     `protobuf:"varint,30,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	CreatedOn     *time.Time `protobuf:"bytes,40,opt,name=created_on,json=createdOn,proto3,stdtime" json:"created_on,omitempty"`
	UpdatedOn     *time.Time `protobuf:"bytes,50,opt,name=updated_on,json=updatedOn,proto3,stdtime" json:"updated_on,omitempty"`
}

func (m *LiveaboardComment) Reset()      { *m = LiveaboardComment{} }
func (*LiveaboardComment) ProtoMessage() {}
func (*LiveaboardComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{8}
}
func (m *LiveaboardComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LiveaboardComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LiveaboardComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LiveaboardComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveaboardComment.Merge(m, src)
}
func (m *LiveaboardComment) XXX_Size() int {
	return m.Size()
}
func (m *LiveaboardComment) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveaboardComment.DiscardUnknown(m)
}

var xxx_messageInfo_LiveaboardComment proto.InternalMessageInfo

func (m *LiveaboardComment) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LiveaboardComment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *LiveaboardComment) GetStars() uint32 {
	if m != nil {
		return m.Stars
	}
	return 0
}

func (m *LiveaboardComment) GetReservationId() uint64 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (m *LiveaboardComment) GetCreatedOn() *time.Time {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *LiveaboardComment) GetUpdatedOn() *time.Time {
	if m != nil {
		return m.UpdatedOn
	}
	return nil
}

func init() {
	proto.RegisterEnum("model.AccountType", AccountType_name, AccountType_value)
	proto.RegisterEnum("model.GenderType", GenderType_name, GenderType_value)
	proto.RegisterEnum("model.LevelType", LevelType_name, LevelType_value)
	proto.RegisterEnum("model.TripType", TripType_name, TripType_value)
	proto.RegisterType((*File)(nil), "model.File")
	proto.RegisterType((*Account)(nil), "model.Account")
	proto.RegisterType((*Admin)(nil), "model.Admin")
	proto.RegisterType((*Address)(nil), "model.Address")
	proto.RegisterType((*Agency)(nil), "model.Agency")
	proto.RegisterType((*Diver)(nil), "model.Diver")
	proto.RegisterType((*TripComment)(nil), "model.TripComment")
	proto.RegisterType((*HotelComment)(nil), "model.HotelComment")
	proto.RegisterType((*LiveaboardComment)(nil), "model.LiveaboardComment")
}

func init() { proto.RegisterFile("model.proto", fileDescriptor_4c16552f9fdb66d8) }

var fileDescriptor_4c16552f9fdb66d8 = []byte{
	// 935 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x96, 0x4d, 0x6b, 0xe3, 0x46,
	0x18, 0xc7, 0x3d, 0x8e, 0xfc, 0xf6, 0x38, 0x6b, 0xdc, 0xe9, 0xd2, 0x8a, 0x94, 0x2a, 0xc6, 0x74,
	0x17, 0x13, 0xa8, 0x4d, 0xd4, 0x5b, 0x09, 0x14, 0xc5, 0x2f, 0xbb, 0x29, 0x89, 0x1d, 0x26, 0xde,
	0x2d, 0x5d, 0x0a, 0x46, 0xb6, 0x26, 0xce, 0x50, 0x59, 0x23, 0x24, 0xd9, 0xc5, 0xb7, 0x7e, 0x84,
	0xfd, 0x18, 0xbd, 0xf7, 0x33, 0x14, 0xb6, 0xa7, 0xe6, 0xb8, 0xa7, 0xb6, 0x71, 0x2e, 0x3d, 0xee,
	0xa9, 0xbd, 0xf4, 0x50, 0x66, 0x46, 0xca, 0x2a, 0x6b, 0x08, 0x0d, 0xb9, 0x2c, 0xe4, 0x36, 0xff,
	0xe7, 0xcd, 0xf3, 0xfc, 0xfe, 0x92, 0x30, 0x94, 0x67, 0xdc, 0xa1, 0x6e, 0xd3, 0x0f, 0x78, 0xc4,
	0x71, 0x4e, 0x8a, 0xad, 0xcf, 0xa7, 0x2c, 0x3a, 0x9b, 0x8f, 0x9b, 0x13, 0x3e, 0x6b, 0x4d, 0xf9,
	0x94, 0xb7, 0x64, 0x76, 0x3c, 0x3f, 0x95, 0x4a, 0x0a, 0x79, 0x52, 0x5d, 0x5b, 0xdb, 0x53, 0xce,
	0xa7, 0x2e, 0x7d, 0x5b, 0x15, 0xb1, 0x19, 0x0d, 0x23, 0x7b, 0xe6, 0xab, 0x82, 0xfa, 0xd7, 0xa0,
	0xf5, 0x98, 0x4b, 0xf1, 0x16, 0x14, 0x4f, 0x99, 0x4b, 0x3d, 0x7b, 0x46, 0x75, 0x54, 0x43, 0x8d,
	0x12, 0xb9, 0xd2, 0x18, 0x83, 0xe6, 0x32, 0xef, 0x7b, 0x3d, 0x2b, 0xe3, 0xf2, 0x2c, 0x62, 0x22,
	0xaf, 0x43, 0x0d, 0x35, 0x36, 0x89, 0x3c, 0xd7, 0x7f, 0xc9, 0x42, 0xc1, 0x9a, 0x4c, 0xf8, 0xdc,
	0x8b, 0x70, 0x05, 0xb2, 0xcc, 0x91, 0x93, 0x34, 0x92, 0x65, 0x8e, 0x98, 0x3f, 0x0f, 0x69, 0x20,
	0xe7, 0x83, 0x9a, 0x9f, 0x68, 0xfc, 0x10, 0x72, 0x74, 0x66, 0x33, 0x57, 0x7f, 0x28, 0x13, 0x4a,
	0x88, 0x0e, 0xdf, 0x0e, 0xc3, 0x1f, 0x78, 0xe0, 0xe8, 0x86, 0xea, 0x48, 0x34, 0x7e, 0x0c, 0x5a,
	0xb4, 0xf4, 0xa9, 0xde, 0xa8, 0xa1, 0x46, 0xc5, 0xc4, 0x4d, 0x05, 0x2a, 0xfe, 0xed, 0xe1, 0xd2,
	0xa7, 0x44, 0xe6, 0xc5, 0x8c, 0x05, 0x0d, 0xd8, 0x29, 0xa3, 0x8e, 0x6e, 0xd6, 0x50, 0xa3, 0x48,
	0xae, 0x34, 0xfe, 0x08, 0xf2, 0xf6, 0x24, 0x62, 0x0b, 0xaa, 0xef, 0xc9, 0x4c, 0xac, 0xf0, 0x57,
	0x00, 0x93, 0x80, 0xda, 0x11, 0x75, 0x46, 0xdc, 0xd3, 0x7b, 0x35, 0xd4, 0x28, 0x9b, 0x5b, 0x4d,
	0xc5, 0xb1, 0x99, 0x70, 0x6c, 0x0e, 0x13, 0x8e, 0xfb, 0xda, 0xcb, 0x3f, 0xb6, 0x11, 0x29, 0xc5,
	0x3d, 0x03, 0x4f, 0x0c, 0x98, 0xfb, 0x4e, 0x32, 0xe0, 0xf8, 0xff, 0x0e, 0x88, 0x7b, 0x06, 0x5e,
	0x7d, 0x17, 0x72, 0x96, 0x33, 0x63, 0x1e, 0x6e, 0x40, 0xc1, 0x56, 0x3b, 0x49, 0x92, 0x65, 0xb3,
	0x72, 0x7d, 0x53, 0x92, 0xa4, 0xeb, 0xbf, 0x0a, 0xf4, 0x8e, 0x13, 0xd0, 0x30, 0x5c, 0x43, 0xff,
	0x19, 0x54, 0x6c, 0x95, 0x1a, 0xb9, 0xcc, 0xa3, 0xa3, 0xdd, 0xd8, 0x80, 0xcd, 0x38, 0x7a, 0xc8,
	0x3c, 0xba, 0xbb, 0x56, 0x65, 0xc6, 0x6e, 0xa4, 0xab, 0x4c, 0x61, 0xfb, 0x84, 0x45, 0xcb, 0xd8,
	0x10, 0x79, 0x96, 0x46, 0xf1, 0x30, 0x9a, 0x70, 0x47, 0x19, 0x22, 0x8c, 0x8a, 0xb5, 0x80, 0x1c,
	0xd0, 0x29, 0xe3, 0x9e, 0xc4, 0x5f, 0x22, 0xb1, 0xc2, 0x3a, 0x14, 0xe4, 0xc5, 0x83, 0xa5, 0xa4,
	0x5f, 0x22, 0x89, 0x7c, 0x0f, 0xf0, 0xff, 0x96, 0x85, 0xbc, 0x35, 0xa5, 0xde, 0x64, 0xb9, 0x86,
	0x12, 0x83, 0x96, 0x7a, 0x82, 0xb5, 0xe4, 0xe9, 0xf5, 0xcf, 0xb8, 0x47, 0x93, 0xa7, 0x57, 0x8a,
	0xb4, 0x75, 0xc6, 0x8d, 0xd6, 0xe1, 0x26, 0x14, 0x62, 0xc4, 0x92, 0x5e, 0xaa, 0x52, 0x45, 0xf7,
	0xb5, 0x57, 0xbf, 0x6f, 0x67, 0x48, 0x52, 0x84, 0x5b, 0x50, 0x72, 0xf8, 0x64, 0x3e, 0xa3, 0x5e,
	0x14, 0xea, 0x66, 0x6d, 0xa3, 0x51, 0x36, 0xcb, 0x71, 0x87, 0x78, 0x93, 0xe3, 0xf2, 0xb7, 0x35,
	0xef, 0x10, 0xdd, 0xbb, 0x2b, 0xd1, 0xde, 0xed, 0x89, 0xfe, 0xbc, 0x01, 0xb9, 0x0e, 0x5b, 0xd0,
	0x60, 0x0d, 0xe8, 0xa7, 0x00, 0xa7, 0x2c, 0x08, 0xa3, 0x51, 0x0a, 0x6b, 0x49, 0x46, 0xfa, 0x82,
	0xed, 0x27, 0x50, 0x72, 0xed, 0x24, 0xab, 0xf8, 0x16, 0x45, 0xa0, 0x7f, 0x0d, 0xbc, 0x91, 0x06,
	0xdf, 0x06, 0x18, 0xb3, 0x20, 0x3a, 0x1b, 0x89, 0x1f, 0x8f, 0x89, 0xde, 0x74, 0xd9, 0xa2, 0xc0,
	0xa5, 0x2e, 0x2c, 0xfb, 0x3a, 0x76, 0x44, 0xf1, 0x63, 0xc8, 0xb9, 0x74, 0x41, 0x5d, 0xf9, 0xd4,
	0x56, 0xcc, 0x6a, 0xcc, 0xf7, 0x50, 0xc4, 0xe4, 0xe7, 0x45, 0xa5, 0xd3, 0x2e, 0xef, 0xdd, 0xec,
	0xf2, 0x35, 0xd7, 0x7a, 0xb7, 0x76, 0xed, 0xf8, 0xae, 0xae, 0xbd, 0xb8, 0xbd, 0x6b, 0x7f, 0x23,
	0x28, 0x0f, 0x03, 0xe6, 0xb7, 0xf9, 0x4c, 0x5c, 0x69, 0xcd, 0x3b, 0xf9, 0x0e, 0xcb, 0x54, 0x6c,
	0x5c, 0x22, 0x85, 0x33, 0x61, 0x64, 0x07, 0xa1, 0xb4, 0xec, 0x01, 0x51, 0x02, 0x3f, 0x82, 0x4a,
	0x40, 0x43, 0x1a, 0x2c, 0xec, 0x88, 0x71, 0x6f, 0xc4, 0xd4, 0x67, 0x5d, 0x23, 0x0f, 0x52, 0xd1,
	0x03, 0xe7, 0x9d, 0xc5, 0x1b, 0x77, 0x5d, 0xdc, 0xbc, 0xfd, 0xe2, 0xff, 0x20, 0xd8, 0x7c, 0xca,
	0x23, 0xea, 0xde, 0xbb, 0xcd, 0xff, 0x45, 0xf0, 0xc1, 0x21, 0x5b, 0x50, 0x7b, 0xcc, 0xed, 0xc0,
	0xb9, 0x6f, 0xeb, 0xef, 0xb4, 0xa0, 0x9c, 0xfa, 0x0f, 0x81, 0x4b, 0x90, 0xb3, 0x3a, 0x47, 0x07,
	0xfd, 0x6a, 0x06, 0x03, 0xe4, 0xad, 0x27, 0xdd, 0x7e, 0xfb, 0xdb, 0x2a, 0x12, 0xe1, 0xce, 0xc1,
	0xf3, 0x2e, 0xa9, 0x66, 0x77, 0xea, 0x00, 0x4f, 0xa8, 0xe7, 0xd0, 0x40, 0xd6, 0x03, 0xe4, 0x7b,
	0xdd, 0x23, 0xeb, 0xb0, 0x5b, 0xcd, 0xe0, 0x22, 0x68, 0xf2, 0x84, 0x76, 0xbe, 0x83, 0xd2, 0xd5,
	0x77, 0x03, 0x57, 0x00, 0x0e, 0xfa, 0x27, 0x43, 0xf2, 0xac, 0x3d, 0x1c, 0x10, 0x35, 0xf7, 0xc8,
	0x3a, 0x19, 0x76, 0x49, 0x15, 0x89, 0x33, 0xe9, 0x9e, 0xb4, 0x9f, 0x75, 0xab, 0x59, 0xfc, 0x31,
	0x7c, 0x68, 0x75, 0x9e, 0x5b, 0xfd, 0x76, 0xb7, 0x33, 0x1a, 0x1c, 0x77, 0xfb, 0xa3, 0x6f, 0x2c,
	0x51, 0xb4, 0x21, 0x06, 0xa4, 0xb4, 0xb6, 0xf3, 0x08, 0x8a, 0xe2, 0x1d, 0x95, 0xc3, 0xcb, 0x50,
	0x18, 0xf4, 0x4f, 0x9e, 0x0e, 0x88, 0xb8, 0xc0, 0x26, 0x14, 0x07, 0xbd, 0x9e, 0x52, 0x68, 0xff,
	0xcb, 0xf3, 0x0b, 0x23, 0xf3, 0xfa, 0xc2, 0xc8, 0xbc, 0xb9, 0x30, 0xd0, 0x8f, 0x2b, 0x03, 0xfd,
	0xb4, 0x32, 0xd0, 0xab, 0x95, 0x81, 0xce, 0x57, 0x06, 0xfa, 0x73, 0x65, 0xa0, 0xbf, 0x56, 0x46,
	0xe6, 0xcd, 0xca, 0x40, 0x2f, 0x2f, 0x8d, 0xcc, 0xf9, 0xa5, 0x91, 0x79, 0x7d, 0x69, 0x64, 0x5e,
	0x68, 0xcd, 0x96, 0x3f, 0x1e, 0xe7, 0x25, 0xba, 0x2f, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xfa,
	0x9c, 0xc2, 0x13, 0x8f, 0x0a, 0x00, 0x00,
}

func (x AccountType) String() string {
	s, ok := AccountType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x GenderType) String() string {
	s, ok := GenderType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x LevelType) String() string {
	s, ok := LevelType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x TripType) String() string {
	s, ok := TripType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *File) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*File)
	if !ok {
		that2, ok := that.(File)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Filename != that1.Filename {
		return false
	}
	if this.Link != that1.Link {
		return false
	}
	if !bytes.Equal(this.File, that1.File) {
		return false
	}
	return true
}
func (this *Account) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Account)
	if !ok {
		that2, ok := that.(Account)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Username != that1.Username {
		return false
	}
	if this.Email != that1.Email {
		return false
	}
	if this.Password != that1.Password {
		return false
	}
	if this.Type != that1.Type {
		return false
	}
	if this.Verified != that1.Verified {
		return false
	}
	if this.Active != that1.Active {
		return false
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *Admin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Admin)
	if !ok {
		that2, ok := that.(Admin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Account.Equal(that1.Account) {
		return false
	}
	return true
}
func (this *Address) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Address)
	if !ok {
		that2, ok := that.(Address)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.AddressLine_1 != that1.AddressLine_1 {
		return false
	}
	if this.AddressLine_2 != that1.AddressLine_2 {
		return false
	}
	if this.City != that1.City {
		return false
	}
	if this.Postcode != that1.Postcode {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	if this.Country != that1.Country {
		return false
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *Agency) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Agency)
	if !ok {
		that2, ok := that.(Agency)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Phone != that1.Phone {
		return false
	}
	if !this.Account.Equal(that1.Account) {
		return false
	}
	if !this.Address.Equal(&that1.Address) {
		return false
	}
	if len(this.Documents) != len(that1.Documents) {
		return false
	}
	for i := range this.Documents {
		if !this.Documents[i].Equal(&that1.Documents[i]) {
			return false
		}
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *Diver) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Diver)
	if !ok {
		that2, ok := that.(Diver)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.FirstName != that1.FirstName {
		return false
	}
	if this.LastName != that1.LastName {
		return false
	}
	if this.Phone != that1.Phone {
		return false
	}
	if !this.BirthDate.Equal(that1.BirthDate) {
		return false
	}
	if this.Level != that1.Level {
		return false
	}
	if !this.Account.Equal(that1.Account) {
		return false
	}
	if len(this.Documents) != len(that1.Documents) {
		return false
	}
	for i := range this.Documents {
		if !this.Documents[i].Equal(&that1.Documents[i]) {
			return false
		}
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *TripComment) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TripComment)
	if !ok {
		that2, ok := that.(TripComment)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Comment != that1.Comment {
		return false
	}
	if this.Stars != that1.Stars {
		return false
	}
	if this.ReservationId != that1.ReservationId {
		return false
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *HotelComment) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*HotelComment)
	if !ok {
		that2, ok := that.(HotelComment)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Comment != that1.Comment {
		return false
	}
	if this.Stars != that1.Stars {
		return false
	}
	if this.ReservationId != that1.ReservationId {
		return false
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *LiveaboardComment) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*LiveaboardComment)
	if !ok {
		that2, ok := that.(LiveaboardComment)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Id != that1.Id {
		return false
	}
	if this.Comment != that1.Comment {
		return false
	}
	if this.Stars != that1.Stars {
		return false
	}
	if this.ReservationId != that1.ReservationId {
		return false
	}
	if that1.CreatedOn == nil {
		if this.CreatedOn != nil {
			return false
		}
	} else if !this.CreatedOn.Equal(*that1.CreatedOn) {
		return false
	}
	if that1.UpdatedOn == nil {
		if this.UpdatedOn != nil {
			return false
		}
	} else if !this.UpdatedOn.Equal(*that1.UpdatedOn) {
		return false
	}
	return true
}
func (this *File) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&pb.File{")
	s = append(s, "Filename: "+fmt.Sprintf("%#v", this.Filename)+",\n")
	s = append(s, "Link: "+fmt.Sprintf("%#v", this.Link)+",\n")
	s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Account) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&pb.Account{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	s = append(s, "Type: "+fmt.Sprintf("%#v", this.Type)+",\n")
	s = append(s, "Verified: "+fmt.Sprintf("%#v", this.Verified)+",\n")
	s = append(s, "Active: "+fmt.Sprintf("%#v", this.Active)+",\n")
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Admin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&pb.Admin{")
	if this.Account != nil {
		s = append(s, "Account: "+fmt.Sprintf("%#v", this.Account)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Address) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&pb.Address{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "AddressLine_1: "+fmt.Sprintf("%#v", this.AddressLine_1)+",\n")
	s = append(s, "AddressLine_2: "+fmt.Sprintf("%#v", this.AddressLine_2)+",\n")
	s = append(s, "City: "+fmt.Sprintf("%#v", this.City)+",\n")
	s = append(s, "Postcode: "+fmt.Sprintf("%#v", this.Postcode)+",\n")
	s = append(s, "Region: "+fmt.Sprintf("%#v", this.Region)+",\n")
	s = append(s, "Country: "+fmt.Sprintf("%#v", this.Country)+",\n")
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Agency) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&pb.Agency{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	if this.Account != nil {
		s = append(s, "Account: "+fmt.Sprintf("%#v", this.Account)+",\n")
	}
	s = append(s, "Address: "+strings.Replace(this.Address.GoString(), `&`, ``, 1)+",\n")
	if this.Documents != nil {
		vs := make([]File, len(this.Documents))
		for i := range vs {
			vs[i] = this.Documents[i]
		}
		s = append(s, "Documents: "+fmt.Sprintf("%#v", vs)+",\n")
	}
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Diver) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&pb.Diver{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	s = append(s, "BirthDate: "+fmt.Sprintf("%#v", this.BirthDate)+",\n")
	s = append(s, "Level: "+fmt.Sprintf("%#v", this.Level)+",\n")
	if this.Account != nil {
		s = append(s, "Account: "+fmt.Sprintf("%#v", this.Account)+",\n")
	}
	if this.Documents != nil {
		vs := make([]File, len(this.Documents))
		for i := range vs {
			vs[i] = this.Documents[i]
		}
		s = append(s, "Documents: "+fmt.Sprintf("%#v", vs)+",\n")
	}
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TripComment) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&pb.TripComment{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Comment: "+fmt.Sprintf("%#v", this.Comment)+",\n")
	s = append(s, "Stars: "+fmt.Sprintf("%#v", this.Stars)+",\n")
	s = append(s, "ReservationId: "+fmt.Sprintf("%#v", this.ReservationId)+",\n")
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *HotelComment) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&pb.HotelComment{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Comment: "+fmt.Sprintf("%#v", this.Comment)+",\n")
	s = append(s, "Stars: "+fmt.Sprintf("%#v", this.Stars)+",\n")
	s = append(s, "ReservationId: "+fmt.Sprintf("%#v", this.ReservationId)+",\n")
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *LiveaboardComment) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&pb.LiveaboardComment{")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Comment: "+fmt.Sprintf("%#v", this.Comment)+",\n")
	s = append(s, "Stars: "+fmt.Sprintf("%#v", this.Stars)+",\n")
	s = append(s, "ReservationId: "+fmt.Sprintf("%#v", this.ReservationId)+",\n")
	s = append(s, "CreatedOn: "+fmt.Sprintf("%#v", this.CreatedOn)+",\n")
	s = append(s, "UpdatedOn: "+fmt.Sprintf("%#v", this.UpdatedOn)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringModel(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *File) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *File) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *File) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.File) > 0 {
		i -= len(m.File)
		copy(dAtA[i:], m.File)
		i = encodeVarintModel(dAtA, i, uint64(len(m.File)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Link) > 0 {
		i -= len(m.Link)
		copy(dAtA[i:], m.Link)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Link)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Filename) > 0 {
		i -= len(m.Filename)
		copy(dAtA[i:], m.Filename)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Filename)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Account) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Account) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Account) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintModel(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x82
	}
	if m.CreatedOn != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintModel(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb2
	}
	if m.Active {
		i--
		if m.Active {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe0
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x90
	}
	if m.Type != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc0
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Admin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Admin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Admin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModel(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Address) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Address) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Address) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintModel(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x82
	}
	if m.CreatedOn != nil {
		n5, err5 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err5 != nil {
			return 0, err5
		}
		i -= n5
		i = encodeVarintModel(dAtA, i, uint64(n5))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb2
	}
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe2
	}
	if len(m.Region) > 0 {
		i -= len(m.Region)
		copy(dAtA[i:], m.Region)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Region)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x92
	}
	if len(m.Postcode) > 0 {
		i -= len(m.Postcode)
		copy(dAtA[i:], m.Postcode)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Postcode)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintModel(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.AddressLine_2) > 0 {
		i -= len(m.AddressLine_2)
		copy(dAtA[i:], m.AddressLine_2)
		i = encodeVarintModel(dAtA, i, uint64(len(m.AddressLine_2)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.AddressLine_1) > 0 {
		i -= len(m.AddressLine_1)
		copy(dAtA[i:], m.AddressLine_1)
		i = encodeVarintModel(dAtA, i, uint64(len(m.AddressLine_1)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Agency) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Agency) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Agency) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err6 != nil {
			return 0, err6
		}
		i -= n6
		i = encodeVarintModel(dAtA, i, uint64(n6))
		i--
		dAtA[i] = 0x4
		i--
		dAtA[i] = 0xb2
	}
	if m.CreatedOn != nil {
		n7, err7 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err7 != nil {
			return 0, err7
		}
		i -= n7
		i = encodeVarintModel(dAtA, i, uint64(n7))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe2
	}
	if len(m.Documents) > 0 {
		for iNdEx := len(m.Documents) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Documents[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintModel(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3
			i--
			dAtA[i] = 0x92
		}
	}
	{
		size, err := m.Address.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintModel(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xc2
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModel(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Diver) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Diver) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Diver) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n10, err10 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err10 != nil {
			return 0, err10
		}
		i -= n10
		i = encodeVarintModel(dAtA, i, uint64(n10))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0xd2
	}
	if m.CreatedOn != nil {
		n11, err11 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err11 != nil {
			return 0, err11
		}
		i -= n11
		i = encodeVarintModel(dAtA, i, uint64(n11))
		i--
		dAtA[i] = 0x5
		i--
		dAtA[i] = 0x82
	}
	if len(m.Documents) > 0 {
		for iNdEx := len(m.Documents) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Documents[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintModel(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4
			i--
			dAtA[i] = 0xb2
		}
	}
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModel(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0xe2
	}
	if m.Level != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Level))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x90
	}
	n13, err13 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.BirthDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.BirthDate):])
	if err13 != nil {
		return 0, err13
	}
	i -= n13
	i = encodeVarintModel(dAtA, i, uint64(n13))
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xc2
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintModel(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintModel(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TripComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TripComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TripComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n14, err14 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err14 != nil {
			return 0, err14
		}
		i -= n14
		i = encodeVarintModel(dAtA, i, uint64(n14))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x92
	}
	if m.CreatedOn != nil {
		n15, err15 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err15 != nil {
			return 0, err15
		}
		i -= n15
		i = encodeVarintModel(dAtA, i, uint64(n15))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	if m.ReservationId != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.ReservationId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.Stars != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Stars))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HotelComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HotelComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HotelComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n16, err16 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err16 != nil {
			return 0, err16
		}
		i -= n16
		i = encodeVarintModel(dAtA, i, uint64(n16))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x92
	}
	if m.CreatedOn != nil {
		n17, err17 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err17 != nil {
			return 0, err17
		}
		i -= n17
		i = encodeVarintModel(dAtA, i, uint64(n17))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	if m.ReservationId != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.ReservationId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.Stars != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Stars))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LiveaboardComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LiveaboardComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LiveaboardComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UpdatedOn != nil {
		n18, err18 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.UpdatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn):])
		if err18 != nil {
			return 0, err18
		}
		i -= n18
		i = encodeVarintModel(dAtA, i, uint64(n18))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x92
	}
	if m.CreatedOn != nil {
		n19, err19 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreatedOn, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn):])
		if err19 != nil {
			return 0, err19
		}
		i -= n19
		i = encodeVarintModel(dAtA, i, uint64(n19))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0xc2
	}
	if m.ReservationId != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.ReservationId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.Stars != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Stars))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintModel(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x52
	}
	if m.Id != 0 {
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintModel(dAtA []byte, offset int, v uint64) int {
	offset -= sovModel(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *File) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Filename)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Link)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.File)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *Account) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.Type != 0 {
		n += 2 + sovModel(uint64(m.Type))
	}
	if m.Verified {
		n += 3
	}
	if m.Active {
		n += 3
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func (m *Admin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovModel(uint64(l))
	}
	return n
}

func (m *Address) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.AddressLine_1)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AddressLine_2)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.Postcode)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.Region)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func (m *Agency) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.Account != nil {
		l = m.Account.Size()
		n += 2 + l + sovModel(uint64(l))
	}
	l = m.Address.Size()
	n += 2 + l + sovModel(uint64(l))
	if len(m.Documents) > 0 {
		for _, e := range m.Documents {
			l = e.Size()
			n += 2 + l + sovModel(uint64(l))
		}
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func (m *Diver) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.BirthDate)
	n += 2 + l + sovModel(uint64(l))
	if m.Level != 0 {
		n += 2 + sovModel(uint64(m.Level))
	}
	if m.Account != nil {
		l = m.Account.Size()
		n += 2 + l + sovModel(uint64(l))
	}
	if len(m.Documents) > 0 {
		for _, e := range m.Documents {
			l = e.Size()
			n += 2 + l + sovModel(uint64(l))
		}
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func (m *TripComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Stars != 0 {
		n += 2 + sovModel(uint64(m.Stars))
	}
	if m.ReservationId != 0 {
		n += 2 + sovModel(uint64(m.ReservationId))
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func (m *HotelComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Stars != 0 {
		n += 2 + sovModel(uint64(m.Stars))
	}
	if m.ReservationId != 0 {
		n += 2 + sovModel(uint64(m.ReservationId))
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func (m *LiveaboardComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Stars != 0 {
		n += 2 + sovModel(uint64(m.Stars))
	}
	if m.ReservationId != 0 {
		n += 2 + sovModel(uint64(m.ReservationId))
	}
	if m.CreatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	if m.UpdatedOn != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.UpdatedOn)
		n += 2 + l + sovModel(uint64(l))
	}
	return n
}

func sovModel(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozModel(x uint64) (n int) {
	return sovModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *File) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&File{`,
		`Filename:` + fmt.Sprintf("%v", this.Filename) + `,`,
		`Link:` + fmt.Sprintf("%v", this.Link) + `,`,
		`File:` + fmt.Sprintf("%v", this.File) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Account) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Account{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Username:` + fmt.Sprintf("%v", this.Username) + `,`,
		`Email:` + fmt.Sprintf("%v", this.Email) + `,`,
		`Password:` + fmt.Sprintf("%v", this.Password) + `,`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Verified:` + fmt.Sprintf("%v", this.Verified) + `,`,
		`Active:` + fmt.Sprintf("%v", this.Active) + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Admin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Admin{`,
		`Account:` + strings.Replace(this.Account.String(), "Account", "Account", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Address) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Address{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`AddressLine_1:` + fmt.Sprintf("%v", this.AddressLine_1) + `,`,
		`AddressLine_2:` + fmt.Sprintf("%v", this.AddressLine_2) + `,`,
		`City:` + fmt.Sprintf("%v", this.City) + `,`,
		`Postcode:` + fmt.Sprintf("%v", this.Postcode) + `,`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`Country:` + fmt.Sprintf("%v", this.Country) + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Agency) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForDocuments := "[]File{"
	for _, f := range this.Documents {
		repeatedStringForDocuments += strings.Replace(strings.Replace(f.String(), "File", "File", 1), `&`, ``, 1) + ","
	}
	repeatedStringForDocuments += "}"
	s := strings.Join([]string{`&Agency{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Phone:` + fmt.Sprintf("%v", this.Phone) + `,`,
		`Account:` + strings.Replace(this.Account.String(), "Account", "Account", 1) + `,`,
		`Address:` + strings.Replace(strings.Replace(this.Address.String(), "Address", "Address", 1), `&`, ``, 1) + `,`,
		`Documents:` + repeatedStringForDocuments + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Diver) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForDocuments := "[]File{"
	for _, f := range this.Documents {
		repeatedStringForDocuments += strings.Replace(strings.Replace(f.String(), "File", "File", 1), `&`, ``, 1) + ","
	}
	repeatedStringForDocuments += "}"
	s := strings.Join([]string{`&Diver{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`FirstName:` + fmt.Sprintf("%v", this.FirstName) + `,`,
		`LastName:` + fmt.Sprintf("%v", this.LastName) + `,`,
		`Phone:` + fmt.Sprintf("%v", this.Phone) + `,`,
		`BirthDate:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.BirthDate), "Timestamp", "timestamp.Timestamp", 1), `&`, ``, 1) + `,`,
		`Level:` + fmt.Sprintf("%v", this.Level) + `,`,
		`Account:` + strings.Replace(this.Account.String(), "Account", "Account", 1) + `,`,
		`Documents:` + repeatedStringForDocuments + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TripComment) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TripComment{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Comment:` + fmt.Sprintf("%v", this.Comment) + `,`,
		`Stars:` + fmt.Sprintf("%v", this.Stars) + `,`,
		`ReservationId:` + fmt.Sprintf("%v", this.ReservationId) + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *HotelComment) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&HotelComment{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Comment:` + fmt.Sprintf("%v", this.Comment) + `,`,
		`Stars:` + fmt.Sprintf("%v", this.Stars) + `,`,
		`ReservationId:` + fmt.Sprintf("%v", this.ReservationId) + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *LiveaboardComment) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&LiveaboardComment{`,
		`Id:` + fmt.Sprintf("%v", this.Id) + `,`,
		`Comment:` + fmt.Sprintf("%v", this.Comment) + `,`,
		`Stars:` + fmt.Sprintf("%v", this.Stars) + `,`,
		`ReservationId:` + fmt.Sprintf("%v", this.ReservationId) + `,`,
		`CreatedOn:` + strings.Replace(fmt.Sprintf("%v", this.CreatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`UpdatedOn:` + strings.Replace(fmt.Sprintf("%v", this.UpdatedOn), "Timestamp", "timestamp.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringModel(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *File) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: File: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: File: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filename", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filename = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Link", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Link = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.File = append(m.File[:0], dAtA[iNdEx:postIndex]...)
			if m.File == nil {
				m.File = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Account) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Account: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Account: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= AccountType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Active = bool(v != 0)
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 80:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Admin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Admin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Admin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &Account{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Address) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Address: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Address: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressLine_1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressLine_1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressLine_2", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressLine_2 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Postcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Postcode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 80:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Agency) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Agency: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Agency: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &Account{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Address.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Documents", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Documents = append(m.Documents, File{})
			if err := m.Documents[len(m.Documents)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Diver) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Diver: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Diver: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BirthDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.BirthDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			m.Level = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Level |= LevelType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 60:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &Account{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 70:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Documents", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Documents = append(m.Documents, File{})
			if err := m.Documents[len(m.Documents)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 80:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 90:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TripComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TripComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TripComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stars", wireType)
			}
			m.Stars = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stars |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationId", wireType)
			}
			m.ReservationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReservationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HotelComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HotelComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HotelComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stars", wireType)
			}
			m.Stars = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stars |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationId", wireType)
			}
			m.ReservationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReservationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LiveaboardComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LiveaboardComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LiveaboardComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stars", wireType)
			}
			m.Stars = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Stars |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationId", wireType)
			}
			m.ReservationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReservationId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedOn == nil {
				m.CreatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 50:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedOn", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModel
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UpdatedOn == nil {
				m.UpdatedOn = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.UpdatedOn, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthModel
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupModel
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthModel
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthModel        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModel          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupModel = fmt.Errorf("proto: unexpected end of group")
)
